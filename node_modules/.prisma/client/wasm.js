
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoomScalarFieldEnum = {
  id: 'id',
  roomNumber: 'roomNumber',
  roomType: 'roomType',
  status: 'status',
  price: 'price',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookingScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  guestName: 'guestName',
  guestEmail: 'guestEmail',
  phoneNumber: 'phoneNumber',
  roomId: 'roomId',
  checkIn: 'checkIn',
  checkOut: 'checkOut',
  status: 'status',
  paymentStatus: 'paymentStatus',
  totalAmount: 'totalAmount',
  specialRequests: 'specialRequests',
  checkedInAt: 'checkedInAt',
  checkedOutAt: 'checkedOutAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById'
};

exports.Prisma.RoomServiceRequestScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  requestType: 'requestType',
  description: 'description',
  status: 'status',
  notes: 'notes',
  requestedAt: 'requestedAt',
  completedAt: 'completedAt'
};

exports.Prisma.StayRatingScalarFieldEnum = {
  id: 'id',
  bookingId: 'bookingId',
  rating: 'rating',
  feedback: 'feedback',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  STAFF: 'STAFF',
  RECEPTIONIST: 'RECEPTIONIST',
  MANAGER: 'MANAGER'
};

exports.RoomType = exports.$Enums.RoomType = {
  STANDARD: 'STANDARD',
  DELUXE: 'DELUXE',
  SUITE: 'SUITE'
};

exports.RoomStatus = exports.$Enums.RoomStatus = {
  AVAILABLE: 'AVAILABLE',
  OCCUPIED: 'OCCUPIED',
  CLEANING: 'CLEANING'
};

exports.BookingStatus = exports.$Enums.BookingStatus = {
  ACTIVE: 'ACTIVE',
  CHECKED_IN: 'CHECKED_IN',
  CHECKED_OUT: 'CHECKED_OUT',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PAID: 'PAID',
  PENDING: 'PENDING',
  REFUNDED: 'REFUNDED'
};

exports.ServiceRequestType = exports.$Enums.ServiceRequestType = {
  WATER: 'WATER',
  TOWEL: 'TOWEL',
  PILLOW: 'PILLOW',
  BLANKET: 'BLANKET',
  CLEANING: 'CLEANING',
  MAINTENANCE: 'MAINTENANCE',
  ROOM_SERVICE: 'ROOM_SERVICE',
  OTHER: 'OTHER'
};

exports.ServiceRequestStatus = exports.$Enums.ServiceRequestStatus = {
  PENDING: 'PENDING',
  COMPLETED: 'COMPLETED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Room: 'Room',
  Booking: 'Booking',
  RoomServiceRequest: 'RoomServiceRequest',
  StayRating: 'StayRating'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\aloys\\OneDrive\\Desktop\\hotel\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\aloys\\OneDrive\\Desktop\\hotel\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../apps/backend/.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\nenum UserRole {\n  STAFF\n  RECEPTIONIST\n  MANAGER\n}\n\nenum RoomType {\n  STANDARD\n  DELUXE\n  SUITE\n}\n\nenum RoomStatus {\n  AVAILABLE\n  OCCUPIED\n  CLEANING\n}\n\nenum BookingStatus {\n  ACTIVE\n  CHECKED_IN\n  CHECKED_OUT\n  COMPLETED\n  CANCELLED\n}\n\nenum PaymentStatus {\n  PAID\n  PENDING\n  REFUNDED\n}\n\nenum ServiceRequestType {\n  WATER\n  TOWEL\n  PILLOW\n  BLANKET\n  CLEANING\n  MAINTENANCE\n  ROOM_SERVICE\n  OTHER\n}\n\nenum ServiceRequestStatus {\n  PENDING\n  COMPLETED\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  username  String   @unique\n  password  String\n  role      UserRole\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  createdBookings Booking[]\n\n  @@map(\"users\")\n}\n\nmodel Room {\n  id          String     @id @default(cuid())\n  roomNumber  String     @unique\n  roomType    RoomType\n  status      RoomStatus @default(AVAILABLE)\n  price       Float\n  description String?\n  createdAt   DateTime   @default(now())\n  updatedAt   DateTime   @updatedAt\n\n  // Relations\n  bookings Booking[]\n\n  @@map(\"rooms\")\n}\n\nmodel Booking {\n  id              String        @id @default(cuid())\n  bookingId       String        @unique // Unique identifier for user login\n  guestName       String\n  guestEmail      String?\n  phoneNumber     String\n  roomId          String\n  checkIn         DateTime\n  checkOut        DateTime\n  status          BookingStatus @default(ACTIVE)\n  paymentStatus   PaymentStatus @default(PENDING)\n  totalAmount     Float\n  specialRequests String?\n  checkedInAt     DateTime?\n  checkedOutAt    DateTime?\n  createdAt       DateTime      @default(now())\n  updatedAt       DateTime      @updatedAt\n  createdById     String // Admin who created the booking\n\n  // Relations\n  room            Room                 @relation(fields: [roomId], references: [id])\n  createdBy       User                 @relation(fields: [createdById], references: [id])\n  serviceRequests RoomServiceRequest[]\n  stayRating      StayRating?\n\n  @@map(\"bookings\")\n}\n\nmodel RoomServiceRequest {\n  id          String               @id @default(cuid())\n  bookingId   String\n  requestType ServiceRequestType\n  description String?\n  status      ServiceRequestStatus @default(PENDING)\n  notes       String?\n  requestedAt DateTime             @default(now())\n  completedAt DateTime?\n\n  // Relations\n  booking Booking @relation(fields: [bookingId], references: [id])\n\n  @@map(\"room_service_requests\")\n}\n\nmodel StayRating {\n  id        String   @id @default(cuid())\n  bookingId String   @unique\n  rating    Int // 1-5 scale\n  feedback  String?\n  createdAt DateTime @default(now())\n\n  // Relations\n  booking Booking @relation(fields: [bookingId], references: [id])\n\n  @@map(\"stay_ratings\")\n}\n",
  "inlineSchemaHash": "fd96501a608d1dbc37be71df19b2c0ef78143789b30eebbaff733013ec99a843",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToUser\"}],\"dbName\":\"users\"},\"Room\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomType\",\"kind\":\"enum\",\"type\":\"RoomType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RoomStatus\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bookings\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToRoom\"}],\"dbName\":\"rooms\"},\"Booking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"guestName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"guestEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkIn\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkOut\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BookingStatus\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"specialRequests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checkedInAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"checkedOutAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"BookingToRoom\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BookingToUser\"},{\"name\":\"serviceRequests\",\"kind\":\"object\",\"type\":\"RoomServiceRequest\",\"relationName\":\"BookingToRoomServiceRequest\"},{\"name\":\"stayRating\",\"kind\":\"object\",\"type\":\"StayRating\",\"relationName\":\"BookingToStayRating\"}],\"dbName\":\"bookings\"},\"RoomServiceRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestType\",\"kind\":\"enum\",\"type\":\"ServiceRequestType\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ServiceRequestStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToRoomServiceRequest\"}],\"dbName\":\"room_service_requests\"},\"StayRating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bookingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"booking\",\"kind\":\"object\",\"type\":\"Booking\",\"relationName\":\"BookingToStayRating\"}],\"dbName\":\"stay_ratings\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

